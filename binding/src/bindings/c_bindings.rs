/* automatically generated by rust-bindgen 0.69.2 */

# [repr (C)] # [derive (Debug , Copy , Clone)] pub struct __FlashStringHelper { _unused : [u8 ; 0] , } # [repr (C)] pub struct LiquidCrystal_I2C__bindgen_vtable (:: core :: ffi :: c_void) ; # [repr (C , packed)] pub struct LiquidCrystal_I2C { pub vtable_ : * const LiquidCrystal_I2C__bindgen_vtable , pub _Addr : u8 , pub _displayfunction : u8 , pub _displaycontrol : u8 , pub _displaymode : u8 , pub _numlines : u8 , pub _cols : u8 , pub _rows : u8 , pub _backlightval : u8 , } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C5beginEhhh"] pub fn LiquidCrystal_I2C_begin (this : * mut LiquidCrystal_I2C , cols : u8 , rows : u8 , charsize : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C5clearEv"] pub fn LiquidCrystal_I2C_clear (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C4homeEv"] pub fn LiquidCrystal_I2C_home (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C9noDisplayEv"] pub fn LiquidCrystal_I2C_noDisplay (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C7displayEv"] pub fn LiquidCrystal_I2C_display (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C7noBlinkEv"] pub fn LiquidCrystal_I2C_noBlink (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C5blinkEv"] pub fn LiquidCrystal_I2C_blink (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C8noCursorEv"] pub fn LiquidCrystal_I2C_noCursor (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C6cursorEv"] pub fn LiquidCrystal_I2C_cursor (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C17scrollDisplayLeftEv"] pub fn LiquidCrystal_I2C_scrollDisplayLeft (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C18scrollDisplayRightEv"] pub fn LiquidCrystal_I2C_scrollDisplayRight (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C9printLeftEv"] pub fn LiquidCrystal_I2C_printLeft (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C10printRightEv"] pub fn LiquidCrystal_I2C_printRight (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C11leftToRightEv"] pub fn LiquidCrystal_I2C_leftToRight (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C11rightToLeftEv"] pub fn LiquidCrystal_I2C_rightToLeft (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C14shiftIncrementEv"] pub fn LiquidCrystal_I2C_shiftIncrement (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C14shiftDecrementEv"] pub fn LiquidCrystal_I2C_shiftDecrement (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C11noBacklightEv"] pub fn LiquidCrystal_I2C_noBacklight (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C9backlightEv"] pub fn LiquidCrystal_I2C_backlight (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C10autoscrollEv"] pub fn LiquidCrystal_I2C_autoscroll (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C12noAutoscrollEv"] pub fn LiquidCrystal_I2C_noAutoscroll (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C10createCharEhPh"] pub fn LiquidCrystal_I2C_createChar (this : * mut LiquidCrystal_I2C , arg1 : u8 , arg2 : * mut u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C9setCursorEhh"] pub fn LiquidCrystal_I2C_setCursor (this : * mut LiquidCrystal_I2C , arg1 : u8 , arg2 : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C7commandEh"] pub fn LiquidCrystal_I2C_command (this : * mut LiquidCrystal_I2C , arg1 : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C4initEv"] pub fn LiquidCrystal_I2C_init (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [doc = "compatibility API function aliases"] # [link_name = "\u{1}_ZN17LiquidCrystal_I2C8blink_onEv"] pub fn LiquidCrystal_I2C_blink_on (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C9blink_offEv"] pub fn LiquidCrystal_I2C_blink_off (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C9cursor_onEv"] pub fn LiquidCrystal_I2C_cursor_on (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C10cursor_offEv"] pub fn LiquidCrystal_I2C_cursor_off (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C12setBacklightEh"] pub fn LiquidCrystal_I2C_setBacklight (this : * mut LiquidCrystal_I2C , new_val : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C21load_custom_characterEhPh"] pub fn LiquidCrystal_I2C_load_custom_character (this : * mut LiquidCrystal_I2C , char_num : u8 , rows : * mut u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C8printstrEPKc"] pub fn LiquidCrystal_I2C_printstr (this : * mut LiquidCrystal_I2C , arg1 : * const :: core :: ffi :: c_char) ; } extern "C" { # [doc = "Unsupported API functions (not implemented in this library)"] # [link_name = "\u{1}_ZN17LiquidCrystal_I2C6statusEv"] pub fn LiquidCrystal_I2C_status (this : * mut LiquidCrystal_I2C) -> u8 ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C11setContrastEh"] pub fn LiquidCrystal_I2C_setContrast (this : * mut LiquidCrystal_I2C , new_val : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C6keypadEv"] pub fn LiquidCrystal_I2C_keypad (this : * mut LiquidCrystal_I2C) -> u8 ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C8setDelayEii"] pub fn LiquidCrystal_I2C_setDelay (this : * mut LiquidCrystal_I2C , arg1 : :: core :: ffi :: c_int , arg2 : :: core :: ffi :: c_int) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C2onEv"] pub fn LiquidCrystal_I2C_on (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C3offEv"] pub fn LiquidCrystal_I2C_off (this : * mut LiquidCrystal_I2C) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C13init_bargraphEh"] pub fn LiquidCrystal_I2C_init_bargraph (this : * mut LiquidCrystal_I2C , graphtype : u8) -> u8 ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C21draw_horizontal_graphEhhhh"] pub fn LiquidCrystal_I2C_draw_horizontal_graph (this : * mut LiquidCrystal_I2C , row : u8 , column : u8 , len : u8 , pixel_col_end : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C19draw_vertical_graphEhhhh"] pub fn LiquidCrystal_I2C_draw_vertical_graph (this : * mut LiquidCrystal_I2C , row : u8 , column : u8 , len : u8 , pixel_col_end : u8) ; } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2CC1Ehhh"] pub fn LiquidCrystal_I2C_LiquidCrystal_I2C (this : * mut LiquidCrystal_I2C , lcd_Addr : u8 , lcd_cols : u8 , lcd_rows : u8) ; } impl LiquidCrystal_I2C { # [inline] pub unsafe fn begin (& mut self , cols : u8 , rows : u8 , charsize : u8) { LiquidCrystal_I2C_begin (self , cols , rows , charsize) } # [inline] pub unsafe fn clear (& mut self) { LiquidCrystal_I2C_clear (self) } # [inline] pub unsafe fn home (& mut self) { LiquidCrystal_I2C_home (self) } # [inline] pub unsafe fn noDisplay (& mut self) { LiquidCrystal_I2C_noDisplay (self) } # [inline] pub unsafe fn display (& mut self) { LiquidCrystal_I2C_display (self) } # [inline] pub unsafe fn noBlink (& mut self) { LiquidCrystal_I2C_noBlink (self) } # [inline] pub unsafe fn blink (& mut self) { LiquidCrystal_I2C_blink (self) } # [inline] pub unsafe fn noCursor (& mut self) { LiquidCrystal_I2C_noCursor (self) } # [inline] pub unsafe fn cursor (& mut self) { LiquidCrystal_I2C_cursor (self) } # [inline] pub unsafe fn scrollDisplayLeft (& mut self) { LiquidCrystal_I2C_scrollDisplayLeft (self) } # [inline] pub unsafe fn scrollDisplayRight (& mut self) { LiquidCrystal_I2C_scrollDisplayRight (self) } # [inline] pub unsafe fn printLeft (& mut self) { LiquidCrystal_I2C_printLeft (self) } # [inline] pub unsafe fn printRight (& mut self) { LiquidCrystal_I2C_printRight (self) } # [inline] pub unsafe fn leftToRight (& mut self) { LiquidCrystal_I2C_leftToRight (self) } # [inline] pub unsafe fn rightToLeft (& mut self) { LiquidCrystal_I2C_rightToLeft (self) } # [inline] pub unsafe fn shiftIncrement (& mut self) { LiquidCrystal_I2C_shiftIncrement (self) } # [inline] pub unsafe fn shiftDecrement (& mut self) { LiquidCrystal_I2C_shiftDecrement (self) } # [inline] pub unsafe fn noBacklight (& mut self) { LiquidCrystal_I2C_noBacklight (self) } # [inline] pub unsafe fn backlight (& mut self) { LiquidCrystal_I2C_backlight (self) } # [inline] pub unsafe fn autoscroll (& mut self) { LiquidCrystal_I2C_autoscroll (self) } # [inline] pub unsafe fn noAutoscroll (& mut self) { LiquidCrystal_I2C_noAutoscroll (self) } # [inline] pub unsafe fn createChar (& mut self , arg1 : u8 , arg2 : * mut u8) { LiquidCrystal_I2C_createChar (self , arg1 , arg2) } # [inline] pub unsafe fn setCursor (& mut self , arg1 : u8 , arg2 : u8) { LiquidCrystal_I2C_setCursor (self , arg1 , arg2) } # [inline] pub unsafe fn command (& mut self , arg1 : u8) { LiquidCrystal_I2C_command (self , arg1) } # [inline] pub unsafe fn init (& mut self) { LiquidCrystal_I2C_init (self) } # [inline] pub unsafe fn blink_on (& mut self) { LiquidCrystal_I2C_blink_on (self) } # [inline] pub unsafe fn blink_off (& mut self) { LiquidCrystal_I2C_blink_off (self) } # [inline] pub unsafe fn cursor_on (& mut self) { LiquidCrystal_I2C_cursor_on (self) } # [inline] pub unsafe fn cursor_off (& mut self) { LiquidCrystal_I2C_cursor_off (self) } # [inline] pub unsafe fn setBacklight (& mut self , new_val : u8) { LiquidCrystal_I2C_setBacklight (self , new_val) } # [inline] pub unsafe fn load_custom_character (& mut self , char_num : u8 , rows : * mut u8) { LiquidCrystal_I2C_load_custom_character (self , char_num , rows) } # [inline] pub unsafe fn printstr (& mut self , arg1 : * const :: core :: ffi :: c_char) { LiquidCrystal_I2C_printstr (self , arg1) } # [inline] pub unsafe fn status (& mut self) -> u8 { LiquidCrystal_I2C_status (self) } # [inline] pub unsafe fn setContrast (& mut self , new_val : u8) { LiquidCrystal_I2C_setContrast (self , new_val) } # [inline] pub unsafe fn keypad (& mut self) -> u8 { LiquidCrystal_I2C_keypad (self) } # [inline] pub unsafe fn setDelay (& mut self , arg1 : :: core :: ffi :: c_int , arg2 : :: core :: ffi :: c_int) { LiquidCrystal_I2C_setDelay (self , arg1 , arg2) } # [inline] pub unsafe fn on (& mut self) { LiquidCrystal_I2C_on (self) } # [inline] pub unsafe fn off (& mut self) { LiquidCrystal_I2C_off (self) } # [inline] pub unsafe fn init_bargraph (& mut self , graphtype : u8) -> u8 { LiquidCrystal_I2C_init_bargraph (self , graphtype) } # [inline] pub unsafe fn draw_horizontal_graph (& mut self , row : u8 , column : u8 , len : u8 , pixel_col_end : u8) { LiquidCrystal_I2C_draw_horizontal_graph (self , row , column , len , pixel_col_end) } # [inline] pub unsafe fn draw_vertical_graph (& mut self , row : u8 , column : u8 , len : u8 , pixel_col_end : u8) { LiquidCrystal_I2C_draw_vertical_graph (self , row , column , len , pixel_col_end) } # [inline] pub unsafe fn new (lcd_Addr : u8 , lcd_cols : u8 , lcd_rows : u8) -> Self { let mut __bindgen_tmp = :: core :: mem :: MaybeUninit :: uninit () ; LiquidCrystal_I2C_LiquidCrystal_I2C (__bindgen_tmp . as_mut_ptr () , lcd_Addr , lcd_cols , lcd_rows) ; __bindgen_tmp . assume_init () } } extern "C" { # [link_name = "\u{1}_ZN17LiquidCrystal_I2C5writeEh"] pub fn LiquidCrystal_I2C_write (this : * mut :: core :: ffi :: c_void , arg1 : u8) -> usize ; }